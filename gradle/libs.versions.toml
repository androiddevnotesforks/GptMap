[versions]
accompanist = "0.34.0"
androidDesugarJdkLibs = "2.0.4"
androidGradlePlugin = "8.2.2"
androidxActivity = "1.8.2"
androidxComposeBom = "2024.02.00"
androidxComposeCompiler = "1.5.9"  # Compose VC
androidxCoreSplashscreen = "1.0.1"
androidxDataStore = "1.0.0"
androidxEspresso = "3.5.1"
androidxHiltNavigationCompose = "1.1.0"
androidxLifecycle = "2.7.0"
androidxNavigation = "2.7.7"
androidxTestExt = "1.1.5"
androidxTestRules = "1.5.0"
androidxTestCore = "1.5.0"
androidxTestRunner = "1.5.2"
androidxUiAutomator = "2.2.0"
androidxWork = "2.9.0"
appcompat = "1.6.1"
baseJunit = "4.13.2"
coilCompose = "2.5.0"
coreKtxVersion = "1.12.0"
coreTesting = "2.2.0"
detekt = "1.23.3"
detektCompose = "0.3.8"
espressoCore = "3.5.1"
firebase-analytics = "21.5.1"
firebase-auth = "22.3.1"
firebase-crashlytics = "18.6.2"
firebase-firestore = "24.10.2"
firebase-messaging = "23.4.1"
firebaseBom = "32.7.2"
firebaseCrashlyticsPlugin = "2.9.9"
firebaseStorage = "20.3.0"
fixture = "1.2.0"
generativeai = "0.2.0"
gmsPlugin = "4.4.1"
googleGson = "2.10.1"
googleServices = "4.4.1"
googleOssPlugin = "0.10.6"
hilt = "2.50"
hiltExt = "1.1.0"
junit = "1.1.5"
junit5Plugin = "1.10.0.0"
junitJupiter = "5.10.1"
kotlin = "1.9.22"
kotlinxDatetime = "0.5.0"
kotlinxCollectionsImmutable = "0.3.6"
kotlinxCoroutines = "1.7.3"
kotlinxSerializationJson = "1.6.0"
ksp = "1.9.22-1.0.17"
ktorVersion = "2.3.2"
lottieCompose = "6.2.0"
logback = "1.2.11"
mapsCompose = "4.1.1"
material3 = "1.2.0-beta02"  # Bom version has Circular Progress Ind. problem
materialVersion = "1.11.0"
mockito = "4.8.0"
mockk = "1.13.9"
okhttp3Logging = "4.12.0"
playServicesAuth = "21.0.0"
playServicesLocation = "21.1.0"
playServicesMaps = "18.2.0"
protobuf = "3.25.2"
protobufPlugin = "0.9.4"
realm = "1.13.0"
retrofit = "2.9.0"
robolectric = "4.11.1"
roborazzi = "1.6.0"
secrets = "2.0.1"
turbine = "1.0.0"
uiautomator = "2.2.0"
benchmarkMacroJunit4 = "1.2.3"
kotlin2 = "1.9.0"
baselineprofile = "1.2.2"
profileinstaller = "1.3.1"
[libraries]

# Compose
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "androidxActivity" }
androidx-compose-foundation = { group = "androidx.compose.foundation", name = "foundation" }
androidx-compose-foundation-layout = { group = "androidx.compose.foundation", name = "foundation-layout" }
androidx-compose-material-iconsExtended = { group = "androidx.compose.material", name = "material-icons-extended" }
androidx-compose-material3 = { group = "androidx.compose.material3", name = "material3", version.ref = "material3" }
androidx-compose-runtime = { group = "androidx.compose.runtime", name = "runtime" }
maps-compose = { module = "com.google.maps.android:maps-compose", version.ref = "mapsCompose" }
androidx-compose-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-compose-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-navigation-compose = { group = "androidx.navigation", name = "navigation-compose", version.ref = "androidxNavigation" }
androidx-compose-ui-util = { group = "androidx.compose.ui", name = "ui-util" }
androidx-lifecycle-runtimeCompose = { group = "androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidxLifecycle" }
androidx-lifecycle-viewModelCompose = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "androidxLifecycle" }
androidx-compose-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }  # Android Compose VC
androidx-compose-ui-test = { group = "androidx.compose.ui", name = "ui-test" }  # Android Compose VC
androidx-compose-ui-testManifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }  # Android Compose VC
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "androidxComposeBom" }  # Android Compose VC
androidx-dataStore-core = { group = "androidx.datastore", name = "datastore-preferences", version.ref = "androidxDataStore" }
# End of it

# Firebase
firebase-auth = { group = "com.google.firebase", name = "firebase-auth", version.ref = "firebase-auth" }
firebase-firestore = { group = "com.google.firebase", name = "firebase-firestore", version.ref = "firebase-firestore" }
firebase-bom = { group = "com.google.firebase", name = "firebase-bom", version.ref = "firebaseBom" }
firebase-crashlytics = { group = "com.google.firebase", name = "firebase-crashlytics", version.ref = "firebase-crashlytics" }
play-services-maps = { module = "com.google.android.gms:play-services-maps", version.ref = "playServicesMaps" }
google-services = { group = "com.google.gms", name = "google-services", version.ref = "googleServices" }
firebase-storage = { group = "com.google.firebase", name = "firebase-storage", version.ref = "firebaseStorage" }
play-services-auth = { group = "com.google.android.gms", name = "play-services-auth", version.ref = "playServicesAuth" }
firebase-messaging = { group = "com.google.firebase", name = "firebase-messaging", version.ref = "firebase-messaging" }  # Firebase VC
play-services-location = { module = "com.google.android.gms:play-services-location", version.ref = "playServicesLocation" }  # Firebase VC
firebase-analytics = { group = "com.google.firebase", name = "firebase-analytics", version.ref = "firebase-analytics" }  # Firebase VC
# End of it

# Testing
androidx-test-ext = { group = "androidx.test.ext", name = "junit-ktx", version.ref = "androidxTestExt" } # Kotlin Android VC
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junit" } # Kotlin Android VC
androidx-test-runner = { group = "androidx.test", name = "runner", version.ref = "androidxTestRunner" }  # app build gradle
junit-jupiter-api = { group = "org.junit.jupiter", name = "junit-jupiter-api", version.ref = "junitJupiter" }
junit-jupiter-engine = { group = "org.junit.jupiter", name = "junit-jupiter-engine", version.ref = "junitJupiter" }
junit-jupiter = { group = "org.junit.jupiter", name = "junit-jupiter", version.ref = "junitJupiter" }
junit-jupiter-params = { group = "org.junit.jupiter", name = "junit-jupiter-params", version.ref = "junitJupiter" }
junit-vintage-engine = { group = "org.junit.vintage", name = "junit-vintage-engine", version.ref = "junitJupiter" }
mockk = { group = "io.mockk", name = "mockk", version.ref = "mockk" }
mockk-android = { group = "io.mockk", name = "mockk-android", version.ref = "mockk" }
turbine = { group = "app.cash.turbine", name = "turbine", version.ref = "turbine" }
kotlinx-coroutines-test = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "kotlinxCoroutines" }
androidx-test-rules = { group = "androidx.test", name = "rules", version.ref = "androidxTestRules" }
mockito-core = { group = "org.mockito", name = "mockito-core", version.ref = "mockito" }
mockito-inline = { group = "org.mockito", name = "mockito-inline", version.ref = "mockito" }
mockito-kotlin = { group = "org.mockito.kotlin", name = "mockito-kotlin", version.ref = "mockito" }
core-testing = { group = "androidx.arch.core", name = "core-testing", version.ref = "coreTesting" }
logback-classic = { group = "ch.qos.logback", name = "logback-classic", version.ref = "logback" }
fixture = { group = "com.appmattus.fixture", name = "fixture", version.ref = "fixture" }
roborazzi = { group = "io.github.takahirom.roborazzi", name = "roborazzi", version.ref = "roborazzi" }
accompanist-testharness = { group = "com.google.accompanist", name = "accompanist-testharness", version.ref = "accompanist" }
robolectric = { group = "org.robolectric", name = "robolectric", version.ref = "robolectric" }
robolectric-shadows = { group = "org.robolectric", name = "shadows-framework", version.ref = "robolectric" }
androidx-test-core = { group = "androidx.test", name = "core", version.ref = "androidxTestCore" }
androidx-test-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "androidxEspresso" }
androidx-test-uiautomator = { group = "androidx.test.uiautomator", name = "uiautomator", version.ref = "androidxUiAutomator" }
# End of it

# Hilt
hilt-android = { group = "com.google.dagger", name = "hilt-android", version.ref = "hilt" }
hilt-android-testing = { group = "com.google.dagger", name = "hilt-android-testing", version.ref = "hilt" }
hilt-compiler = { group = "com.google.dagger", name = "hilt-android-compiler", version.ref = "hilt" }
hilt-ext-compiler = { group = "androidx.hilt", name = "hilt-compiler", version.ref = "hiltExt" }
hilt-ext-work = { group = "androidx.hilt", name = "hilt-work", version.ref = "hiltExt" }
androidx-hilt-navigation-compose = { group = "androidx.hilt", name = "hilt-navigation-compose", version.ref = "androidxHiltNavigationCompose" }  #Android Feature VC
# End of it

# Kotlin
kotlinx-coroutines-android = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-android", version.ref = "kotlinxCoroutines" }  #Android Feature VC
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
kotlinx-datetime = { group = "org.jetbrains.kotlinx", name = "kotlinx-datetime", version.ref = "kotlinxDatetime" }
# End of it

# Realm
realm-library-base = { group = "io.realm.kotlin", name = "library-base", version.ref = "realm" }
realm-library-sync = { group = "io.realm.kotlin", name = "library-sync", version.ref = "realm" }
# End of it

# Android
androidx-work-ktx = { group = "androidx.work", name = "work-runtime-ktx", version.ref = "androidxWork" }
android-desugarJdkLibs = { group = "com.android.tools", name = "desugar_jdk_libs", version.ref = "androidDesugarJdkLibs" }  #Kotlin VC
androidx-core-splashscreen = { group = "androidx.core", name = "core-splashscreen", version.ref = "androidxCoreSplashscreen" }
# End of it

# Ktor
ktor-client-core = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktorVersion" }
ktor-client-android = { group = "io.ktor", name = "ktor-client-android", version.ref = "ktorVersion" }
ktor-serialization-kotlinx-json = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktorVersion" }
ktor-client-logging = { group = "io.ktor", name = "ktor-client-logging", version.ref = "ktorVersion" }
ktor-client-content-negotiation = { group = "io.ktor", name = "ktor-client-content-negotiation", version.ref = "ktorVersion" }
# End of it

# Retrofit
retrofit-core = { group = "com.squareup.retrofit2", name = "retrofit", version.ref = "retrofit" }
retrofit-converter-gson = { group = "com.squareup.retrofit2", name = "converter-gson", version.ref = "retrofit" }
okhttp3-logging-interceptor = { group = "com.squareup.okhttp3", name = "logging-interceptor", version.ref = "okhttp3Logging" }
gson = { group = "com.google.code.gson", name = "gson", version.ref = "googleGson" }
# End of it

coil-compose = { group = "io.coil-kt", name = "coil-compose", version.ref = "coilCompose" }
generativeai = { group = "com.google.ai.client.generativeai", name = "generativeai", version.ref = "generativeai" }
lottie-compose = { module = "com.airbnb.android:lottie-compose", version.ref = "lottieCompose" }
detekt-gradlePlugin = { group = "io.gitlab.arturbosch.detekt", name = "detekt-gradle-plugin", version.ref = "detekt" }
detekt-formatting = { group = "io.gitlab.arturbosch.detekt", name = "detekt-formatting", version.ref = "detekt" }
detekt-compose = { group = "io.nlopez.compose.rules", name = "detekt", version.ref = "detektCompose" }
kotlinx-collections-immutable = { group = "org.jetbrains.kotlinx", name = "kotlinx-collections-immutable", version.ref = "kotlinxCollectionsImmutable" }
accompanist-permissions = { group = "com.google.accompanist", name = "accompanist-permissions", version.ref = "accompanist" }
protobuf-kotlin-lite = { group = "com.google.protobuf", name = "protobuf-kotlin-lite", version.ref = "protobuf" }
protobuf-protoc = { group = "com.google.protobuf", name = "protoc", version.ref = "protobuf" }  # Used in datastore-proto build
google-oss-licenses-plugin = { group = "com.google.android.gms", name = "oss-licenses-plugin", version.ref = "googleOssPlugin" }

# Dependencies of the included build-logic
android-gradlePlugin = { group = "com.android.tools.build", name = "gradle", version.ref = "androidGradlePlugin" }
firebase-crashlytics-gradlePlugin = { group = "com.google.firebase", name = "firebase-crashlytics-gradle", version.ref = "firebaseCrashlyticsPlugin" }
kotlin-gradlePlugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }
ksp-gradlePlugin = { group = "com.google.devtools.ksp", name = "com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtxVersion" }
junit = { group = "junit", name = "junit", version.ref = "baseJunit" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
material = { group = "com.google.android.material", name = "material", version.ref = "materialVersion" }
androidx-uiautomator = { group = "androidx.test.uiautomator", name = "uiautomator", version.ref = "uiautomator" }
androidx-benchmark-macro-junit4 = { group = "androidx.benchmark", name = "benchmark-macro-junit4", version.ref = "benchmarkMacroJunit4" }
androidx-profileinstaller = { group = "androidx.profileinstaller", name = "profileinstaller", version.ref = "profileinstaller" }
# End of it

[plugins]
android-application = { id = "com.android.application", version.ref = "androidGradlePlugin" }
android-library = { id = "com.android.library", version.ref = "androidGradlePlugin" }
firebase-crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "firebaseCrashlyticsPlugin" }
gms = { id = "com.google.gms.google-services", version.ref = "gmsPlugin" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
secrets = { id = "com.google.android.libraries.mapsplatform.secrets-gradle-plugin", version.ref = "secrets" }
realm-kotlin = { id = "io.realm.kotlin", version.ref = "realm" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
android-junit5 = { id = "de.mannodermaus.android-junit5", version.ref = "junit5Plugin" }
protobuf = { id = "com.google.protobuf", version.ref = "protobufPlugin" }

# Plugins defined by this project
gptmap-android-application = { id = "gptmap.android.application", version = "unspecified" }
gptmap-android-application-compose = { id = "gptmap.android.application.compose", version = "unspecified" }
gptmap-android-library = { id = "gptmap.android.library", version = "unspecified" }
gptmap-android-library-compose = { id = "gptmap.android.library.compose", version = "unspecified" }
gptmap-android-feature = { id = "gptmap.android.feature", version = "unspecified" }
gptmap-android-hilt = { id = "gptmap.android.hilt", version = "unspecified" }
gptmap-android-application-firebase = { id = "gptmap.android.application.firebase", version = "unspecified" }
gptmap-jvm-library = { id = "gptmap.jvm.library", version = "unspecified" }
gptmap-ktor = { id = "gptmap.ktor", version = "unspecified" }
gptmap-android-detekt = { id = "gptmap.android.detekt", version = "unspecified" }
gptmap-viewmodel-testing = { id = "gptmap.viewmodel.testing", version = "unspecified" }
gptmap-android-test = { id = "gptmap.android.test", version = "unspecified" }
androidTest = { id = "com.android.test", version.ref = "androidGradlePlugin" }
jetbrainsKotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin2" }
baselineprofile = { id = "androidx.baselineprofile", version.ref = "baselineprofile" }
# End of it
